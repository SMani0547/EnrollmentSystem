@model List<USPSystem.Models.GradeViewModel>
@{
    ViewData["Title"] = "My Grades";
}

<div class="container">
    <h2 class="mb-4">My Grades</h2>

    <partial name="_HoldMessage" />

    @if (ViewData["HoldReason"] == null)
    {
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!Model.Any())
        {
            <div class="alert alert-info">
                No grades available.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered table-striped">
                    <thead class="bg-teal text-white">
                        <tr>
                            <th>Course Code</th>
                            <th>Course Name</th>
                            <th>Grade</th>
                            <th>Marks</th>
                            <th>Year</th>
                            <th>Semester</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var grade in Model.OrderByDescending(g => g.Year).ThenByDescending(g => g.Semester))
                        {
                            <tr>
                                <td>@grade.CourseCode</td>
                                <td>@grade.CourseName</td>
                                <td>@grade.Grade</td>
                                <td>@grade.Marks</td>
                                <td>@grade.Year</td>
                                <td>@(grade.Semester == 1 ? "Semester 1" : "Semester 2")</td>
                                <td>
                                    @if (grade.HasAppliedForRecheck)
                                    {
                                        <span class="badge bg-info">Recheck Requested</span>
                                        @if (!string.IsNullOrEmpty(grade.RecheckStatus))
                                    {
                                        <span class="badge @GetStatusBadgeClass(grade.RecheckStatus)">@grade.RecheckStatus</span>
                                    }
                                }
                                    else
                                    {
                                        <a asp-action="ApplyForRecheck" 
                                           asp-route-gradeId="@grade.Id"
                                           class="btn btn-primary btn-sm">
                                            Apply for Recheck
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "bg-warning text-dark",
            "inprogress" => "bg-primary",
            "completed" => "bg-success",
            "rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }
} 