@model USPEducation.Models.StudentFinance

@{
    ViewData["Title"] = "Edit Student Finance";
}

<div class="container-fluid px-4">
    <h1 class="mt-4 mb-3">Edit Student Finance</h1>

    <div class="card">
        <div class="card-header">
            <h5>Edit Finance Details for Student ID: @Model.StudentID</h5>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post" id="financeForm">
                <div class="form-group row">
                    <label asp-for="StudentID" class="col-sm-2 col-form-label">Student ID</label>
                    <div class="col-sm-10">
                        <input asp-for="StudentID" class="form-control" readonly title="Access Denied" />
                        <span asp-validation-for="StudentID" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <label asp-for="TotalFees" class="col-sm-2 col-form-label">Total Fees</label>
                    <div class="col-sm-10">
                        <input asp-for="TotalFees" class="form-control" readonly title="Access Denied" id="totalFees" />
                        <span asp-validation-for="TotalFees" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <label asp-for="AmountPaid" class="col-sm-2 col-form-label">Amount Paid</label>
                    <div class="col-sm-10">
                        <input asp-for="AmountPaid" class="form-control" type="number" step="0.01" id="amountPaid" />
                        <span asp-validation-for="AmountPaid" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <label asp-for="OutstandingBalance" class="col-sm-2 col-form-label">Outstanding Balance</label>
                    <div class="col-sm-10">
                        <input asp-for="OutstandingBalance" class="form-control" readonly title="Access Denied" id="outstandingBalance" />
                        <span asp-validation-for="OutstandingBalance" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <label asp-for="LastUpdated" class="col-sm-2 col-form-label">Last Updated</label>
                    <div class="col-sm-10">
                        <input asp-for="LastUpdated" class="form-control" type="datetime-local" readonly title="Access Denied" />
                        <span asp-validation-for="LastUpdated" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-10 offset-sm-2">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <a href="@Url.Action("FinanceMenu", "AdminFinance")" class="btn btn-secondary ml-2">Cancel</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to calculate Outstanding Balance dynamically
        function calculateOutstandingBalance() {
            var totalFees = parseFloat(document.getElementById('totalFees').value) || 0;
            var amountPaid = parseFloat(document.getElementById('amountPaid').value) || 0;
            var outstandingBalance = totalFees - amountPaid;
            document.getElementById('outstandingBalance').value = outstandingBalance.toFixed(2);  // Update Outstanding Balance
        }

        // Event listeners to recalculate Outstanding Balance when Amount Paid is changed
        document.getElementById('amountPaid').addEventListener('input', calculateOutstandingBalance);

        // Call the function on page load to initialize the Outstanding Balance
        window.onload = calculateOutstandingBalance;
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
